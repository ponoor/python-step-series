# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = python-step-series
description = A Python library for OSC communication with the Ponoor Step-series devices.
author = Julian_Orteil
author_email =
license = MIT
license_files = LICENSE.txt
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/ponoor/python-step-series
project_urls =
#    Documentation =
    Source = https://github.com/ponoor/python-step-series
    Changelog = https://github.com/ponoor/python-step-series/blob/main/CHANGELOG.rst
    Tracker = https://github.com/ponoor/python-step-series/issues
#    Download =

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 2 - Pre-Alpha
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
keywords = ponoor, step400, step800, motor


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.7

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    python-osc


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install python-step-series[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    pytest-order

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = stepseries.module:function
# For example:
# console_scripts =
#     fibonacci = stepseries.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov stepseries --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
markers =
    incremental: xfails further tests in a class if the current fails
    skip_400_disconnected: skips marked tests (or suites) if STEP400 hardware is not detected
    skip_800_disconnected: skips marked tests (or suites) if STEP800 hardware is not detected
    check_800_homesw: verifies configuration and device statuses before running tests that involve the home sw
    check_800_motors: verifies configuration and device statuses before allowing a test to physically run motors
    reset_800_device: after a test suite (class) finishes, reset the device to provide a blank slate
    skip_800_not_configured: skips marked tests (or suites) if test presets have not been flagged as configured

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 100
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.1.1
package = stepseries
extensions =
    no_skeleton
    pre_commit
